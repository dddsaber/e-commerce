import { message } from "antd";
import { instance } from ".";
import { GetReviewsRequest, Review } from "../type/review.type";
import { handleApiError } from "../utils/handle_error_func";
const URL = "/review";

// üü¢ L·∫•y danh s√°ch ng∆∞·ªùi d√πng v√† t·ªïng s·ªë ƒë√°nh gi√°
export const getReviews = async (
  params: GetReviewsRequest
): Promise<{ reviews: Review[]; totalReviews: number }> => {
  try {
    const response = await instance.post<{
      reviews: Review[];
      totalReviews: number;
    }>(`${URL}/get-reviews`, params);

    if (response.status) {
      return response.data; // Tr·∫£ v·ªÅ c·∫£ danh s√°ch reviews v√† t·ªïng s·ªë reviews
    } else {
      message.error("Kh√¥ng th·ªÉ l·∫•y danh s√°ch b√°o c√°o");
      return { reviews: [], totalReviews: 0 };
    }
  } catch (error: unknown) {
    handleApiError(error);
    return { reviews: [], totalReviews: 0 }; // ƒê·∫£m b·∫£o tr·∫£ v·ªÅ c·∫£ reviews v√† totalReviews m·∫∑c ƒë·ªãnh l√† 0
  }
};

// üü¢ T·∫°o m·ªõi b√°o c√°o
export const createReview = async (body: Review): Promise<Review> => {
  try {
    const response = await instance.post<Review>(`${URL}/create-review`, body);
    if (response.status) {
      // Ki·ªÉm tra status th√†nh c√¥ng
      return response.data;
    } else {
      message.error("Kh√¥ng th·ªÉ t·∫°o ng∆∞·ªùi d√πng");
      return {} as Review;
    }
  } catch (error: unknown) {
    handleApiError(error);
    return {} as Review;
  }
};

// üü¢ C·∫≠p nh·∫≠t tr·∫°ng th√°i b√°o c√°o
export const updateReviewStatus = async (
  id: string,
  status: boolean
): Promise<Review> => {
  try {
    const response = await instance.put<Review>(
      `${URL}/${id}/update-review-status`,
      { status }
    );
    if (response.status) {
      // Ki·ªÉm tra status th√†nh c√¥ng
      return response.data;
    } else {
      message.error("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i ng∆∞·ªùi d√πng");
      return {} as Review;
    }
  } catch (error: unknown) {
    handleApiError(error);
    return {} as Review;
  }
};

// üü¢ L·∫•y th√¥ng tin b√°o c√°o theo ID
export const getReportById = async (id: string): Promise<Review> => {
  try {
    const response = await instance.get<Review>(`${URL}/${id}`);
    if (response.status) {
      // Ki·ªÉm tra status th√†nh c√¥ng
      return response.data;
    } else {
      message.error("Kh√¥ng th·ªÉ l·∫•y th√¥ng tin ng∆∞·ªùi d√πng");
      return {} as Review;
    }
  } catch (error: unknown) {
    handleApiError(error);
    return {} as Review;
  }
};
